# 2. Посчитать четные и нечетные цифры введенного натурального числа.
# # Например, если введено число 34560, в нем 3 четные цифры
# (4, 6 и 0) и 2 нечетные (3 и 5).
import cProfile
import timeit


def var1(num):
    count_even = count_not_even = 0
    for i in range(len(str(num))):
        num2 = num % 10
        if num2 % 2 == 0:
            count_even += 1
        else:
            count_not_even += 1
        num //= 10
#    print(f'Количество четных цифр в числе {count_even}\n'
#          f'Количество нечетных цифр в числе {count_not_even}')


def var2(number):
    c = 0
    nc = 0
    for i in str(number):
        if int(i) % 2 == 0:
            c += 1
        else:
            nc += 1
#    print(f'Количество четных цифр в числе {c} \n'
#          f'Количество нечетных цифр в числе {nc}')

num = 1423542455326756975927502707209354709275092750927509273905472305972095720937540247534674752389247982374872938748279387498273589278854768459867498768937567386738465737634763849673894765834759873495873485734985314235424553267569759275027072093547092750927509275092739054723059720957209375402475346747523892479823748729387482793874982735892788547684598674987689375673867384657376347638496738947658347598734958734857349853
cProfile.run('var1(num)')
cProfile.run('var2(num)')


print(timeit.timeit('var1(1234648876895321)', setup="from __main__ import var1", number=100000))
# для 10000 = 0.15096929999999997
# для 1000000 = 0.1994383
print(timeit.timeit('var2(1234648876895321)', setup="from __main__ import var2", number=100000))
# для 10000 = 0.1819627
# для 1000000 = 0.21842259999999997

# Второй вариант оказался менее затратным по времени